---
import MeldekortEtterregistrering from "@src/components/MeldekortEtterregistrering";
import MeldekortPending from "@src/components/MeldekortPending";
import MeldekortReady from "@src/components/MeldekortReady";
import type { Language } from "@src/language/types";
import styles from "@src/styles/index.module.css";
import { logger } from "@src/utils/logger";
import "@src/styles/aksel.css";
import { isLocal } from "../../utils/environment";
import { hentMeldekortDataFraApi, prosesserMeldekortDataFraApi } from "@src/utils/meldekortData.ts";

let meldekortDataFraApi;

try {
  meldekortDataFraApi = await hentMeldekortDataFraApi(Astro.locals.token)
} catch (error) {
  logger.error("Error fetching meldekortdata: " + error);
  return new Response("Internal Server Error", { status: 503 });
}

const {
  isPendingForInnsending,
  isReadyForInnsending,
  meldekortData
} = prosesserMeldekortDataFraApi(meldekortDataFraApi);
const language = Astro.currentLocale as Language;
---

{isLocal &&
<meta charset="UTF-8"/>}
<section class="meldekort-mikrofrontend">
  <div class={styles.microfrontend}>
    <MeldekortEtterregistrering language={language} meldekort={meldekortData}/>
    {isPendingForInnsending ? <MeldekortPending language={language} meldekort={meldekortData}/> : null}
    {isReadyForInnsending ? <MeldekortReady language={language} meldekort={meldekortData}/> : null}
  </div>
</section>
<script>
  import { logEvent } from "@src/utils/analytics";

  const microfrontend = document.querySelector("#link");
  microfrontend?.addEventListener("click", () => logEvent("Lenke"));
</script>
